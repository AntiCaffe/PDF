{"ast":null,"code":"var _jsxFileName = \"/Users/popokk/Documents/project/react/frontend/src/components/emailField/index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailField = () => {\n  _s();\n  const [su_email, setSignupEm] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const handleEmailChange = e => {\n    const email = e.target.value;\n    setSignupEm(email);\n\n    // 이메일 유효성 검사를 위한 정규표현식\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    id: \"setEmail\",\n    label: \"E-mail\",\n    value: su_email,\n    onChange: handleEmailChange,\n    variant: \"standard\",\n    margin: \"normal\",\n    error: emailError,\n    helperText: emailError ? \"유효한 이메일 주소를 입력하세요.\" : \"\",\n    sx: {\n      width: \"80%\",\n      marginBottom: \"20px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailField, \"OJ8JtkuQyHVK9Rz28MeggfzWxoU=\");\n_c = EmailField;\nexport default EmailField;\nvar _c;\n$RefreshReg$(_c, \"EmailField\");","map":{"version":3,"names":["useState","TextField","jsxDEV","_jsxDEV","EmailField","_s","su_email","setSignupEm","emailError","setEmailError","handleEmailChange","e","email","target","value","emailRegex","test","id","label","onChange","variant","margin","error","helperText","sx","width","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/popokk/Documents/project/react/frontend/src/components/emailField/index.js"],"sourcesContent":["import { useState } from \"react\";\nimport TextField from \"@mui/material/TextField\";\n\nconst EmailField = () => {\n  const [su_email, setSignupEm] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n\n  const handleEmailChange = (e) => {\n    const email = e.target.value;\n    setSignupEm(email);\n\n    // 이메일 유효성 검사를 위한 정규표현식\n    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$/;\n\n    if (!emailRegex.test(email)) {\n      setEmailError(true);\n    } else {\n      setEmailError(false);\n    }\n  };\n\n  return (\n    <TextField\n      id=\"setEmail\"\n      label=\"E-mail\"\n      value={su_email}\n      onChange={handleEmailChange}\n      variant=\"standard\"\n      margin=\"normal\"\n      error={emailError}\n      helperText={emailError ? \"유효한 이메일 주소를 입력하세요.\" : \"\"}\n      sx={{ width: \"80%\", marginBottom: \"20px\" }}\n    />\n  );\n};\n\nexport default EmailField;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BP,WAAW,CAACK,KAAK,CAAC;;IAElB;IACA,MAAMG,UAAU,GAAG,mDAAmD;IAEtE,IAAI,CAACA,UAAU,CAACC,IAAI,CAACJ,KAAK,CAAC,EAAE;MAC3BH,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC,MAAM;MACLA,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEN,OAAA,CAACF,SAAS;IACRgB,EAAE,EAAC,UAAU;IACbC,KAAK,EAAC,QAAQ;IACdJ,KAAK,EAAER,QAAS;IAChBa,QAAQ,EAAET,iBAAkB;IAC5BU,OAAO,EAAC,UAAU;IAClBC,MAAM,EAAC,QAAQ;IACfC,KAAK,EAAEd,UAAW;IAClBe,UAAU,EAAEf,UAAU,GAAG,oBAAoB,GAAG,EAAG;IACnDgB,EAAE,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,YAAY,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3C;AAEN,CAAC;AAACzB,EAAA,CA/BID,UAAU;AAAA2B,EAAA,GAAV3B,UAAU;AAiChB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}